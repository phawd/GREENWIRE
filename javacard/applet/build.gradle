// GREENWIRE JavaCard Applet Build Script
// --------------------------------------
// This Gradle build file is used to compile, convert, and deploy the PinLogicApplet JavaCard applet for the GREENWIRE project.
// It uses the JavaCard SDK and GlobalPlatformPro included in the GREENWIRE distribution.
//
// Purpose: Automates the build and deployment of JavaCard applets (.cap files) for smartcard research, fuzzing, and EMV/ISO 7816/JavaCard protocol simulation.
// Relative to: GREENWIRE unified smartcard/EMV/JCOP research suite.
// Protocols: JavaCard (applet/caplet), ISO 7816 (APDU), EMV, GlobalPlatform.
//
// See README.md for full project and protocol details.
plugins { id 'java' }

group 'com.greenwire'
version '1.0-SNAPSHOT'

// Offline repositories only (local folders).
repositories {
    flatDir {
        dirs '../../lib', '../../static/java', '../../sdk/javacard/lib'
    }
}

def jcConverter = 'com.sun.javacard.converter.Main'

dependencies {
    // JavaCard API and tools from local SDK if present
    // Accept both versioned and unversioned API jar names
    compileOnly fileTree(dir: '../../sdk/javacard/lib', include: ['api_classic-*.jar', 'api_classic.jar', 'javacard_framework.jar', 'tools.jar'])

    // Local GlobalPlatform tools
    implementation files('../../lib/GlobalPlatformPro.jar')
    implementation files('../../static/java/gp.jar')

    // Local ant-javacard runner (optional for manual builds)
    implementation files('../../static/java/ant-javacard.jar')
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

// Use ant-javacard for proper CAP file building
task buildCap {
    description = 'Build JavaCard CAP file using ant-javacard'
    group = 'Build'
    
    dependsOn 'classes'
    
    doLast {
        println "Building CAP file with ant-javacard..."
        println "Source directory: src/"
        println "Build directory: ${buildDir.path}"
        println ""
        println "To build CAP files offline, use the local ant-javacard jar:"
        println "  java -jar ../../static/java/ant-javacard.jar"
        println ""
        println "Or use the root build script that coordinates all applets:"
        println "  cd ../.. && gradlew listTools"
        println ""
        println "For manual compilation:"
        println "  1. Compile Java source to .class files (gradle classes)"
        println "  2. Use JavaCard converter (SDK) to create .cap file (requires local SDK)"
        println "  3. Deploy with GlobalPlatformPro (local JARs)"
    }
}

task deployCap(type: JavaExec) {
    description = 'Deploy the .CAP file to a JavaCard using local GlobalPlatformPro.'
    group = 'Deployment'

    main = 'pro.javacard.gptool.GPTool'
    classpath = files('../../lib/GlobalPlatformPro.jar')
    
    args = [
        '--install', 'build/com/greenwire/javacard/PinLogicApplet.cap',
        '--verbose'
    ]

    doLast {
        println "---"
        println "Applet deployed using local GlobalPlatformPro JAR."
        println "If deployment failed, ensure:"
        println "  1. CAP file exists at build/com/greenwire/javacard/PinLogicApplet.cap"
        println "  2. Smart card reader is connected"
        println "  3. JavaCard is inserted in reader"
    }
}

// Quick check task for offline setup
task verifyOfflineSetup {
    doLast {
        println "Offline setup status:"
        println "- ../../lib/GlobalPlatformPro.jar: ${file('../../lib/GlobalPlatformPro.jar').exists()}"
        println "- ../../static/java/gp.jar: ${file('../../static/java/gp.jar').exists()}"
        println "- ../../static/java/ant-javacard.jar: ${file('../../static/java/ant-javacard.jar').exists()}"
        println "- ../../sdk/javacard/lib (optional): ${file('../../sdk/javacard/lib').exists()}"
    }
}

defaultTasks 'buildCap'
